import java.text.SimpleDateFormat

description = 'Conscrypt: OpenJdk UberJAR'


buildscript {

    repositories {
        mavenCentral()
    }

    // pull non-linux-aarch64 from maven central
    dependencies {
        classpath 'org.conscrypt:conscrypt-openjdk:2.5.2:osx-x86_64'
        classpath 'org.conscrypt:conscrypt-openjdk:2.5.2:linux-x86_64'
        classpath 'org.conscrypt:conscrypt-openjdk:2.5.2:windows-x86_64'
    }
}

ext {
    buildUberJar = Boolean.parseBoolean(System.getProperty('org.conscrypt.openjdk.buildUberJar', 'false'))
    // linux-aarch64 native code will be included separately
    uberJarClassifiers = (System.getProperty('org.conscrypt.openjdk.uberJarClassifiers',
            'osx-x86_64,linux-x86_64,windows-x86_64')).split(',')
    classesDir = "${buildDir}/classes"
    resourcesDir = "${buildDir}/resources"
    sourcesDir = "${buildDir}/sources"

    def currentDate = new SimpleDateFormat('yyyyMMdd').format(new Date())
    // version to publish
    uberJarVersion = "2.5.2.cndb-${currentDate}"
}

if (buildUberJar) {
    apply plugin: 'biz.aQute.bnd.builder'

    configurations {
        uberJar
    }

    // Point the jar task to the copied classes and resources directories.
    jar {
        from classesDir
        from resourcesDir
    }

    sourcesJar {
        from sourcesDir
    }

    // Add the non-linux-aarch_64 dependencies for the uber jar.
    uberJarClassifiers.each { uberJarClassifier ->
        dependencies.uberJar "${group}:conscrypt-openjdk:${version}:${uberJarClassifier}"
    }

    /**
     * Copy the non-linux-aarch_64 native libraries to the resources directory.
     */
    task copySharedLibs(type: Copy, dependsOn: configurations.uberJar) {
        from {
            configurations.uberJar.collect {
                zipTree(it)
            }
        }
        include '/META-INF/native/**'
        into file(resourcesDir)
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
    jar.dependsOn copySharedLibs


    // Copy the local linux-aarch_64 native library to the resources directory.
    task copyLinuxAarch64Libs(type: Copy) {
        def localLinuxAarch64JarPath = '../openjdk/build/tmp/linuxAarch_64Jar/conscrypt-openjdk-2.5.2-linux-aarch_64.jar'
        from zipTree(localLinuxAarch64JarPath)
        include '/META-INF/native/**'
        into file(resourcesDir)
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
    jar.dependsOn copyLinuxAarch64Libs

    /**
     * Copy the object files to the classes directory.
     */
    task copyClasses(type: Copy, dependsOn: configurations.uberJar) {
        from {
            configurations.uberJar.collect {
                zipTree(it)
            }
        }
        exclude '/META-INF/**'
        into file(classesDir)
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
    jar.dependsOn copyClasses

    task copySources(type: Copy, dependsOn: ":conscrypt-openjdk:sourcesJar") {
        from {
            project(":conscrypt-openjdk").sourceSets.main.java
        }
        into file(sourcesDir)
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
    sourcesJar.dependsOn copySources

    // Note that this assumes that the version of BoringSSL for each
    // artifact exactly matches the one on the current system.
    jar.manifest {
        attributes ('BoringSSL-Version': boringSslVersion,
                    'Automatic-Module-Name': 'org.conscrypt',
                    'Bundle-SymbolicName': 'org.conscrypt',
                    '-exportcontents': 'org.conscrypt.*')
    }

    apply from: "$rootDir/gradle/publishing.gradle"
    publishing.publications.maven {
        artifact sourcesJar
        artifact javadocJar
        artifact jar

        groupId 'org.conscrypt'
        artifactId 'conscrypt-openjdk-uber'
        version uberJarVersion // Use the custom version for the uber jar.
    }
} else {
    // Not building an uber jar - disable all tasks.
    tasks.collect {
        it.enabled = false
    }
}
